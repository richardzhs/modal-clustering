optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1e-20, abstol = 0)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1e-20, abstol = -1e-20)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- list("maxit" = 10000, "fnscale" = -1e-20, abstol = 1e-20)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- list("maxit" = 10000, "fnscale" = -1e-20, restol = 1e-10)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- list("maxit" = 10000, "fnscale" = -1e-20, reltol = 1e-10)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1e-20.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- list("maxit" = 10000, "fnscale" = -1e-20, reltol = 1e-20)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, reltol = 1e-20)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, reltol = 1e-30)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, reltol = 1e-100)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, abstol = 1e-30)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, abstol = 1e-100)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, abstol = 1e-1000)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, abstol = -1e-1000)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
control <- control <- list("maxit" = 10000, "fnscale" = -1, reltol = 1e-1000)
optimize.density(sphered.mix.oil, density.oil.sample, optim.out.pathname, gradient = gradient, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
fun <- function(X) {
-density.oil.sample(X)
}
gradient <- -make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
fun <- function(X) {
-density.oil.sample(X)
}
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
gn <- function(X) {
-gradient(X)
}
control <- control <- list("maxit" = 10000, "fnscale" = 1)
optimize.density(sphered.mix.oil, fun, optim.out.pathname, gradient = gn, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
fun <- function(X) {
-density.oil.sample(X)
}
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
gn <- function(X) {
-gradient(X)
}
control <- control <- list("maxit" = 10000, "fnscale" = 1, abstol = 1e-10)
optimize.density(sphered.mix.oil, fun, optim.out.pathname, gradient = gn, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
fun <- function(X) {
-density.oil.sample(X)
}
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
gn <- function(X) {
-gradient(X)
}
control <- control <- list("maxit" = 10000, "fnscale" = 1, abstol = 1e-30)
optimize.density(sphered.mix.oil, fun, optim.out.pathname, gradient = gn, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
optim.out.filename <- "/optimizing_result/olive-kde-oil-mixture-sample-optima-scale=-1.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
fun <- function(X) {
-density.oil.sample(X)
}
gradient <- make.kde.gradient(X.train = sphered.mix.oil, h = h.mix.oil)
gn <- function(X) {
-gradient(X)
}
control <- control <- list("maxit" = 10000, "fnscale" = 1, abstol = 1e-100)
optimize.density(sphered.mix.oil, fun, optim.out.pathname, gradient = gn, control = control, echo = echo)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
optima <- read.optim(sphered.mix.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
(14*13+5.5)/15
(13*13+12.5+5.5)/15
(13*7+12*7+5.5)/15
library(meanShiftR)
library(ggplot2)
dir <- getwd()
library(meanShiftR)
library(ggplot2)
dir <- getwd()
dir.sep <- "/"
echo <- T
source(paste(dir, 'function_packages', "kernel-density-estimation-functions.R", sep = dir.sep))
source(paste(dir, 'function_packages', "gaussian-mixture-model-functions.R", sep = dir.sep))
source(paste(dir, 'function_packages', "density-optimizing-functions.R", sep = dir.sep))
dat <- read.csv('data/s-originals/s1.csv', header = T, sep = "")
data.filename <- "olive.R"
data.pathname <- paste(dir, 'data', data.filename, sep = dir.sep)
source(data.pathname)
oil.data <- X # save the matrix as 'oil.data'
oil.group.id <- group.id # save the id as 'oil.group.id'
data(wine, package='rattle')
wine.matrix <- data.matrix(wine) # transform dataframe into matrix
wine.data <- wine.matrix[,-1] # data without group id
wine.group.id <- wine.matrix[,1] # group id
mix.par.oil <- fit.gmm(oil.data, oil.group.id)
mix.dens.oil <- make.dgmm(mix.par.oil)
library(meanShiftR)
library(mvtnorm)
library(here)
dir <- here()
dir.sep <- "/"
echo <- T
source(paste(here("function_packages"), "kernel-density-estimation-functions.R", sep = dir.sep))
dir <- getwd()
library(meanShiftR)
library(mvtnorm)
library(here)
dir <- getwd()
dir.sep <- "/"
echo <- T
source(paste(here("function_packages"), "kernel-density-estimation-functions.R", sep = dir.sep))
library(meanShiftR)
library(mvtnorm)
library(here)
dir <- getwd()
dir.sep <- "/"
echo <- T
source(paste(dir, "function_packages", "kernel-density-estimation-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "gaussian-mixture-model-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "density-optimizing-functions.R", sep = dir.sep))
oil.data <- X # save the matrix as 'oil.data'
data.filename <- "olive.R"
data.pathname <- paste(here("data"), data.filename, sep = dir.sep)
source(data.pathname)
data.filename <- "olive.R"
data.pathname <- paste(dir, "data", data.filename, sep = dir.sep)
source(data.pathname)
oil.data <- X # save the matrix as 'oil.data'
oil.group.id <- group.id # save the id as 'oil.group.id'
head(X)
dat <- read.csv('data/s-originals/s1.csv', header = T, sep = "")
colnames(dat) <- c('f1', 'f2', 'group_id')
gaussian.2d <- as.matrix(dat[,c('f1','f2')])
View(gaussian.2d)
ggplot(dat, aes(x = f1, y = f2, label = group_id)) +
geom_point(aes(colour = as.character(group_id)))
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.wine <- cv.search.out$opt.smopar
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.01, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.001, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
density.gaussian.2d <- make.gaussian.kernel.density.estimate(sphered.gaussian.2d, h.gaussian.2d)
density.gaussian.2d <- make.gaussian.kernel.density.estimate(sphered.gaussian.2d, h.gaussian.2d)
optim.out.filename <- "/optimizing_result/gaussian-2d-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(sphered.gaussian.2d, h.gaussian.2d)
optimize.density(sphered.gaussian.2d, density.gaussian.2d, optim.out.pathname, gradient = gradient, echo = echo)
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(h.gaussian.2d, 2), iterations = 1000000)
max(ms$assignment)
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.001, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
density.gaussian.2d <- make.gaussian.kernel.density.estimate(sphered.gaussian.2d, h.gaussian.2d)
?sample_n
?sample.int
dat_sample <- sample_n(dat, 500)
install.packages()
install.packages('dpylr')
library(dplyr)
dat_sample <- sample_n(dat, 500)
View(dat_sample)
ggplot(dat_sample, aes(x = f1, y = f2, label = group_id)) +
geom_point(aes(colour = as.character(group_id)))
set.seed(1234)
dat_sample <- sample_n(dat, 500)
gaussian.2d <- as.matrix(dat_sample[,c('f1','f2')])
ggplot(dat_sample, aes(x = f1, y = f2, label = group_id)) +
geom_point(aes(colour = as.character(group_id)))
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.001, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.001, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
density.gaussian.2d <- make.gaussian.kernel.density.estimate(sphered.gaussian.2d, h.gaussian.2d)
optim.out.filename <- "/optimizing_result/gaussian-2d-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(sphered.gaussian.2d, h.gaussian.2d)
optimize.density(sphered.gaussian.2d, density.gaussian.2d, optim.out.pathname, gradient = gradient, echo = echo)
optima <- read.optim(sphered.gaussian.2d, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(h.gaussian.2d, 2), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(0.1, 2), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(0.11, 2), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(h.oil, 8), iterations = 1000000)
sphered.oil <- sphere(oil.data)
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.oil, trial.hs)
h.oil <- cv.search.out$opt.smopar
h.oil
ms <- meanShift(sphered.oil, bandwidth = rep(h.oil, 8), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(0.871, 8), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(0.88, 8), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(0.9, 8), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(0.971, 8), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(0.96, 8), iterations = 1000000)
max(ms$assignment)
ms$assignment
as.vector(ms$assignment)
oil.group.id
sphered.wine <- sphere(wine.data)
data(wine, package='rattle')
wine.matrix <- data.matrix(wine) # transform dataframe into matrix
wine.data <- wine.matrix[,-1] # data without group id
wine.group.id <- wine.matrix[,1] # group id
sphered.wine <- sphere(wine.data)
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.wine, trial.hs)
h.wine <- cv.search.out$opt.smopar
h.wine
ms <- meanShift(sphered.wine, bandwidth = rep(h.wine, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.oil, bandwidth = rep(1, 13), iterations = 1000000)
ms <- meanShift(sphered.wine, bandwidth = rep(1, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.2, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.3, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.5, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.6, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.55, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.56, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.57, 13), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.wine, bandwidth = rep(1.565, 13), iterations = 1000000)
max(ms$assignment)
as.vector(ms$assignment)
wine.group.id
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(h.gaussian.2d, 2), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(0.11, 2), iterations = 1000000)
max(ms$assignment)
as.vector(ms$assignment)
as.vector(dat_sample$group_id)
set.seed(1234)
dat_sample <- sample_n(dat, 500)
dat_sample <- dat_sample[order(dat_sample$group_id),] # order based on group id
gaussian.2d <- as.matrix(dat_sample[,c('f1','f2')])
ggplot(dat_sample, aes(x = f1, y = f2, label = group_id)) +
geom_point(aes(colour = as.character(group_id)))
ggplot(dat_sample, aes(x = f1, y = f2, label = group_id)) +
geom_point(aes(colour = as.character(group_id)))
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.001, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.gaussian.2d, trial.hs)
h.gaussian.2d <- cv.search.out$opt.smopar
h.gaussian.2d
density.gaussian.2d <- make.gaussian.kernel.density.estimate(sphered.gaussian.2d, h.gaussian.2d)
optim.out.filename <- "/optimizing_result/gaussian-2d-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
gradient <- make.kde.gradient(sphered.gaussian.2d, h.gaussian.2d)
optimize.density(sphered.gaussian.2d, density.gaussian.2d, optim.out.pathname, gradient = gradient, echo = echo)
optima <- read.optim(sphered.gaussian.2d, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(h.gaussian.2d, 2), iterations = 1000000)
max(ms$assignment)
ms <- meanShift(sphered.gaussian.2d, bandwidth = rep(0.11, 2), iterations = 1000000)
max(ms$assignment)
as.vector(ms$assignment)
as.vector(dat_sample$group_id)
library(meanShiftR)
library(mvtnorm)
library(here)
library(dplyr)
library(ggplot2)
dir <- here()
dir <- getwd()
dir.sep <- "/"
echo <- F # controls whether outputs sequences during optimization
source(paste(dir, "function_packages", "kernel-density-estimation-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "gaussian-mixture-model-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "density-optimizing-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "gsl-functions-6-8-2018.R", sep = dir.sep))
data.filename <- "olive.R"
data.pathname <- paste(dir, "data", data.filename, sep = dir.sep)
source(data.pathname)
oil.data <- X # save the matrix as 'oil.data'
oil.group.id <- group.id # save the id as 'oil.group.id'
sphered.oil <- sphere(oil.data)
head(X)
data(wine, package='rattle')
wine.matrix <- data.matrix(wine) # transform dataframe into matrix
wine.data <- wine.matrix[,-1] # data without group id
wine.group.id <- wine.matrix[,1] # group id
sphered.wine <- sphere(wine.data)
head(wine.matrix)
dat <- read.csv('data/s-originals/s1.csv', header = T, sep = "")
colnames(dat) <- c('f1', 'f2', 'group_id')
set.seed(1234)
dat.sample <- sample_n(dat, 500)
dat.sample <- dat.sample[order(dat.sample$group_id),] # order based on group id
gaussian.2d <- as.matrix(dat.sample[,c('f1','f2')])
sphered.gaussian.2d <- sphere(gaussian.2d)
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.oil, trial.hs)
h.oil <- cv.search.out$opt.smopar
h.oil
density.oil <- make.gaussian.kernel.density.estimate(sphered.oil, h.oil)
density.oil(sphered.oil)
density.oil <- make.gaussian.kernel.density.estimate(sphered.oil, h.oil)
optim.out.filename <- "/optimizing_result/oil-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
optima <- read.optim(sphered.oil, optim.out.pathname)
optima
optima <- read.optim(sphered.oil, optim.out.pathname)
clust <- hclust(dist(optima), method = "ward.D2")
clust$height
View(optima)
View(optim.out.list)
optim.out.list$value
for (i in 1:length(optim.out.list)) {
print(optim.out.list[[i]]$value)
}
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value))
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value)
}
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value)
}
optima.density[order(optima.density),]
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value)
}
optima.density[order(optima.density)]
set.seed(1234)
dir.sep <- "/"
echo <- F # controls whether outputs sequences during optimization
source(paste(dir, "function_packages", "kernel-density-estimation-functions.R", sep = dir.sep))
dir <- getwd()
dir.sep <- "/"
echo <- F # controls whether outputs sequences during optimization
source(paste(dir, "function_packages", "kernel-density-estimation-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "gaussian-mixture-model-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "density-optimizing-functions.R", sep = dir.sep))
source(paste(dir, "function_packages", "gsl-functions-6-8-2018.R", sep = dir.sep))
data.filename <- "olive.R"
data.pathname <- paste(dir, "data", data.filename, sep = dir.sep)
source(data.pathname)
oil.data <- X # save the matrix as 'oil.data'
oil.group.id <- group.id # save the id as 'oil.group.id'
sphered.oil <- sphere(oil.data)
head(X)
data(wine, package='rattle')
wine.matrix <- data.matrix(wine) # transform dataframe into matrix
wine.data <- wine.matrix[,-1] # data without group id
wine.group.id <- wine.matrix[,1] # group id
sphered.wine <- sphere(wine.data)
dat <- read.csv('data/s-originals/s1.csv', header = T, sep = "")
colnames(dat) <- c('f1', 'f2', 'group_id')
trial.hs <- c(0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0)
cv.search.out <- cv.search(sphered.oil, trial.hs)
h.oil <- cv.search.out$opt.smopar
h.oil
density.oil <- make.gaussian.kernel.density.estimate(sphered.oil, h.oil)
optim.out.filename <- "/optimizing_result/oil-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value)
}
optima <- read.optim(sphered.oil, optim.out.pathname)
View(oil.data)
View(optim.out.list)
optim.out.filename <- "/optimizing_result/oil-density-optima.R"
optim.out.pathname <- paste(dir, optim.out.filename, sep = "\\")
optima.density <- c()
for (i in 1:length(optim.out.list)) {
optima.density <- c(optima.density, optim.out.list[[i]]$value)
}
optima.density[order(optima.density)]
mdsmat <- gsl.mdsmat(sphered.oil, density.oil)
View(fit.gmm)
